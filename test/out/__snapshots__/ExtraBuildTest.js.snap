// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`custom buildResources and output dirs: linux 1`] = `
Object {
  "linux": Array [
    Object {
      "arch": "x64",
      "file": "TestApp-1.1.0-x86_64.AppImage",
    },
  ],
}
`;

exports[`custom buildResources and output dirs: mac 1`] = `
Object {
  "mac": Array [],
}
`;

exports[`custom buildResources and output dirs: win 1`] = `
Object {
  "win": Array [
    Object {
      "arch": "x64",
      "file": "Test App ÃŸW Setup 1.1.0.exe",
      "safeArtifactName": "TestApp-Setup-1.1.0.exe",
    },
  ],
}
`;

exports[`do not exclude build entirely (respect files) 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`electronDist as path to local folder with electron builds zipped  1`] = `
Object {
  "linux": Array [],
}
`;

exports[`override targets in the config - only arch 1`] = `
Object {
  "win": Array [
    Object {
      "file": "beta.yml",
      "fileContent": Object {
        "githubArtifactName": "TestApp-Setup-1.0.0-beta.1.exe",
        "path": "beta-TestApp.exe",
        "version": "1.0.0-beta.1",
      },
    },
    Object {
      "arch": "ia32",
      "file": "beta-TestApp.exe",
      "safeArtifactName": "TestApp-Setup-1.0.0-beta.1.exe",
    },
  ],
}
`;

exports[`override targets in the config - only arch 2`] = `
Object {
  "channel": "beta",
  "provider": "generic",
  "url": "https://develar.s3.amazonaws.com/test",
}
`;

exports[`override targets in the config - only arch 3`] = `
Object {
  "githubArtifactName": "TestApp-Setup-1.0.0-beta.1.exe",
  "path": "beta-TestApp.exe",
  "version": "1.0.0-beta.1",
}
`;

exports[`override targets in the config 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`overriding the publish channel 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`overriding the publish channel 2`] = `
Array [
  Object {
    "bucket": "my-s3-bucket",
    "channel": "beta",
    "provider": "s3",
  },
]
`;

exports[`prepackaged 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`retrieve latest electron version 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`scheme validation 1`] = `
"Configuration is invalid.
 - configuration has an unknown property 'foo'. These properties are valid:
   object { afterPack?, apk?, appId?, appImage?, appx?, artifactName?, asar?, asarUnpack?, beforeBuild?, buildDependenciesFromSource?, buildVersion?, compression?, copyright?, deb?, detectUpdateChannel?, directories?, dmg?, electronCompile?, electronDist?, electronDownload?, electronVersion?, extends?, extraFiles?, extraMetadata?, extraResources?, fileAssociations?, files?, forceCodeSigning?, freebsd?, icon?, linux?, mac?, mas?, muonVersion?, nodeGypRebuild?, npmArgs?, npmRebuild?, npmSkipBuildFromSource?, nsis?, nsisWeb?, p5p?, pacman?, pkg?, portable?, productName?, protocols?, publish?, releaseInfo?, rpm?, snap?, squirrelWindows?, target?, win? }
   Configuration Options
   
   For typos: please correct them.
   For loader options: webpack 2 no longer allows custom properties in configuration.
     Loaders should be updated to allow passing options via loader options in module.rules.
     Until loaders are updated one can use the LoaderOptionsPlugin to pass these options to the loader:
     plugins: [
       new webpack.LoaderOptionsPlugin({
         // test: /\\\\.xxx$/, // may apply this only for some modules
         options: {
           foo: ...
         }
       })
     ]
 - configuration.mac should be one of these:
   object { artifactName?, asar?, asarUnpack?, binaries?, bundleVersion?, category?, entitlements?, entitlementsInherit?, extendInfo?, extraFiles?, extraResources?, fileAssociations?, files?, forceCodeSigning?, helperBundleId?, icon?, identity?, publish?, requirements?, target?, type? } | {
     \\"type\\": \\"null\\"
   }
   macOS options.
   
   Details:
    * configuration.mac has an unknown property 'foo'. These properties are valid:
      object { artifactName?, asar?, asarUnpack?, binaries?, bundleVersion?, category?, entitlements?, entitlementsInherit?, extendInfo?, extraFiles?, extraResources?, fileAssociations?, files?, forceCodeSigning?, helperBundleId?, icon?, identity?, publish?, requirements?, target?, type? }
    * configuration.mac should be null:
      {
        \\"type\\": \\"null\\"
      }

How to fix:
1. Open https://github.com/electron-userland/electron-builder/wiki/Options
2. Search the option name on the page.
  * Not found? The option was deprecated or not exists (check spelling).
  * Found? Check that the option in the appropriate place. e.g. \\"title\\" only in the \\"dmg\\", not in the root.
"
`;

exports[`scheme validation 2 1`] = `
"Configuration is invalid.
 - configuration.appId should be null,string:
   {
     \\"default\\": \\"com.electron.\${name}\\",
     \\"description\\": \\"The application id. Used as [CFBundleIdentifier](https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102070) for MacOS and as\\\\n[Application User Model ID](https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx) for Windows (NSIS target only, Squirrel.Windows not supported). It is strongly recommended that an explicit ID be set.\\",
     \\"type\\": [
       \\"null\\",
       \\"string\\"
     ]
   }
   The application id. Used as [CFBundleIdentifier](https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102070) for MacOS and as
   [Application User Model ID](https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx) for Windows (NSIS target only, Squirrel.Windows not supported). It is strongly recommended that an explicit ID be set.


How to fix:
1. Open https://github.com/electron-userland/electron-builder/wiki/Options
2. Search the option name on the page.
  * Not found? The option was deprecated or not exists (check spelling).
  * Found? Check that the option in the appropriate place. e.g. \\"title\\" only in the \\"dmg\\", not in the root.
"
`;

exports[`scheme validation extraFiles 1`] = `
Object {
  "linux": Array [
    Object {
      "arch": "x64",
      "file": "TestApp-1.1.0-x86_64.AppImage",
    },
    Object {
      "arch": "ia32",
      "file": "TestApp-1.1.0-ia32.zip",
      "safeArtifactName": "TestApp-1.1.0-ia32.zip",
    },
  ],
}
`;

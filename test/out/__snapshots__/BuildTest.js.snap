// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`afterPack 1`] = `
Object {
  "linux": Array [],
  "mac": Array [],
}
`;

exports[`beforeBuild 1`] = `
Object {
  "linux": Array [],
  "mac": Array [],
}
`;

exports[`build in the app package.json 1`] = `"'build' in the application package.json (<path>/package.json) is not supported since 3.0 anymore. Please move 'build' into the development package.json (<path>/package.json)"`;

exports[`cli 1`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "mac",
      "name": "mac",
      "nodeName": "darwin",
    } => Map {
      1 => Array [],
    },
  },
}
`;

exports[`cli 2`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "mac",
      "name": "mac",
      "nodeName": "darwin",
    } => Map {
      1 => Array [
        "dir",
      ],
    },
  },
}
`;

exports[`cli 3`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "linux",
      "name": "linux",
      "nodeName": "linux",
    } => Map {
      1 => Array [
        "dir",
      ],
    },
  },
}
`;

exports[`cli 4`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "linux",
      "name": "linux",
      "nodeName": "linux",
    } => Map {},
  },
}
`;

exports[`cli 5`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "win",
      "name": "windows",
      "nodeName": "win32",
    } => Map {},
  },
}
`;

exports[`cli 6`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "mac",
      "name": "mac",
      "nodeName": "darwin",
    } => Map {},
    Platform {
      "buildConfigurationKey": "linux",
      "name": "linux",
      "nodeName": "linux",
    } => Map {},
    Platform {
      "buildConfigurationKey": "win",
      "name": "windows",
      "nodeName": "win32",
    } => Map {},
  },
}
`;

exports[`cli 7`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "linux",
      "name": "linux",
      "nodeName": "linux",
    } => Map {
      0 => Array [
        "tar.gz",
      ],
    },
  },
}
`;

exports[`cli 8`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "linux",
      "name": "linux",
      "nodeName": "linux",
    } => Map {
      1 => Array [
        "tar.gz",
      ],
    },
  },
}
`;

exports[`cli 9`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "linux",
      "name": "linux",
      "nodeName": "linux",
    } => Map {
      1 => Array [
        "tar.gz",
      ],
    },
  },
}
`;

exports[`cli 10`] = `
Object {
  "config": undefined,
  "draft": undefined,
  "extraMetadata": undefined,
  "prepackaged": undefined,
  "prerelease": undefined,
  "projectDir": undefined,
  "publish": undefined,
  "targets": Map {
    Platform {
      "buildConfigurationKey": "win",
      "name": "windows",
      "nodeName": "win32",
    } => Map {
      1 => Array [
        "tar.gz",
      ],
    },
  },
}
`;

exports[`electron version from build 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`electron version from electron dependency 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`electron version from electron-prebuilt dependency 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`relative index 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`smart unpack 1`] = `
Object {
  "linux": Array [],
}
`;

exports[`smart unpack 2`] = `
Array [
  "app.asar",
  "electron.asar",
  "app.asar.unpacked",
  "app.asar.unpacked/node_modules",
  "app.asar.unpacked/node_modules/edge-cs",
  "app.asar.unpacked/node_modules/edge-cs/LICENSE.txt",
  "app.asar.unpacked/node_modules/edge-cs/package.json",
  "app.asar.unpacked/node_modules/edge-cs/tools",
  "app.asar.unpacked/node_modules/edge-cs/tools/install.js",
  "app.asar.unpacked/node_modules/edge-cs/src",
  "app.asar.unpacked/node_modules/edge-cs/src/edge-cs",
  "app.asar.unpacked/node_modules/edge-cs/src/edge-cs/EdgeCompiler.cs",
  "app.asar.unpacked/node_modules/edge-cs/src/edge-cs/edge-cs.csproj",
  "app.asar.unpacked/node_modules/edge-cs/src/edge-cs/edge-cs.sln",
  "app.asar.unpacked/node_modules/edge-cs/src/edge-cs/Properties",
  "app.asar.unpacked/node_modules/edge-cs/src/edge-cs/Properties/AssemblyInfo.cs",
  "app.asar.unpacked/node_modules/edge-cs/src/Edge.js.CSharp",
  "app.asar.unpacked/node_modules/edge-cs/src/Edge.js.CSharp/EdgeCompiler.cs",
  "app.asar.unpacked/node_modules/edge-cs/src/Edge.js.CSharp/edge-cs-coreclr.sln",
  "app.asar.unpacked/node_modules/edge-cs/src/Edge.js.CSharp/edge-cs-coreclr.xproj",
  "app.asar.unpacked/node_modules/edge-cs/src/Edge.js.CSharp/gulpfile.js",
  "app.asar.unpacked/node_modules/edge-cs/src/Edge.js.CSharp/package.json",
  "app.asar.unpacked/node_modules/edge-cs/src/Edge.js.CSharp/project.json",
  "app.asar.unpacked/node_modules/edge-cs/lib",
  "app.asar.unpacked/node_modules/edge-cs/lib/edge-cs.dll",
  "app.asar.unpacked/node_modules/edge-cs/lib/edge-cs.js",
  "app.asar.unpacked/node_modules/edge-cs/lib/bootstrap",
  "app.asar.unpacked/node_modules/edge-cs/lib/bootstrap/Dummy.cs",
  "app.asar.unpacked/node_modules/edge-cs/lib/bootstrap/project.json",
  "app.asar.unpacked/node_modules/@electron-builder",
  "app.asar.unpacked/node_modules/@electron-builder/test-smart-unpack",
  "app.asar.unpacked/node_modules/@electron-builder/test-smart-unpack/foo.dll",
  "app.asar.unpacked/node_modules/@electron-builder/test-smart-unpack/package.json",
]
`;

exports[`www as default dir 1`] = `
Object {
  "linux": Array [],
}
`;
